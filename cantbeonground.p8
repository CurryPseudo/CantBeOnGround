pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--die
originpos = {}
originpos.x = 1.4
originpos.y = 12.4
--player
groundheight = 3
player = {}
player.x = originpos.x
player.y = originpos.y
player.vx = 0
player.vy = 0
player.width = 0.6
player.height = 1.0
player.dir = 1
player.bdir = 0
gravity = 0.004
fx = 0.0005

--power
powertime = 0.6
powertimecount = 0
couldpower = true
powera = 0.005
powerangle = 1/14
powering = false

--jump
jumpflag = false
jumpspeed = 0.12
function _draw() 
    cls(0)
    index = 3 - player.dir
    if(ifpowering())
    then
        index += 1;
    end
    if(player.dir == 0)
    then
        index = 3 - sign(player.vx)
        if(player.vx == 0)
        then
            index = 1
        end
    end
    map(0,0,0,0,16,16)
    spr(index,player.x * 8 - 4,player.y * 8 - 4)
    print(player.x)
    print(player.y)
    print(jumpflag)
    print(player.vy)
end
function toradian(degree)
    return degree / 180 * 3.14159
end
function _update60()
    powerupdate()
    playerupdate()
    
end
function powerbutton()
    return btn(0) or btn(1) or btn(2)
end
function powerupdate()
    if(powertimecount > 0 and powerbutton())
    then
        powering = true
        powertimecount -= 1 / 60
        if(not btn(0) and not btn(1) and btn(2))
        then
            powerup(0,1)
        else
            powerup(player.dir,1)
        end
    else
        powering = false
    end
end
function ifpowering()
    return powering
end
function powerup(x,y)
    player.vx += x * powera * cos(powerangle)
    player.vy += y * powera * sin(powerangle)
end
function playerupdate()
    player.bdir = 0
    if(btn(0))
    then
        player.dir = -1
        player.bdir -= 1
    end
    if(btn(1))
    then
        player.dir = 1
        player.bdir += 1
    end
    player.vy += gravity
    player.vx += fx * sign(player.vx) * -1
    if(abs(player.vx) <= fx)
    then
        player.vx = 0
    end
    if(abs(player.vy) <= fx)
    then
        player.vy = 0
    end
    stepbyv()
    if(dieingcheck())
    then
        resetpos()
    end
end
function resetpos()
   player.x = originpos.x 
   player.y = originpos.y
   player.vx = 0
   player.vy = 0
end
function dieingcheck()
    return player.y > 16.5
end
function rightedge()
    return player.x + player.width / 2
end
function leftedge()
    return player.x - player.width / 2
end
function upedge()
    return player.y - player.height / 2
end
function downedge()
    return player.y + player.height / 2
end
function stepbyv()
    lx = player.x
    ly = player.y
    player.x = player.x + player.vx
    if(solidbothy(sign(player.vx), 0))
    then
        player.x = lx
        player.vx = 0
    end
    player.y = player.y + player.vy
    if(solidbothx(sign(player.vy), 0))
    then
        player.y = ly
        if(player.vy > 0)
        then
            touchgroundandjump()
        else
            player.vy = 0
        end
    end
    r1,r2 = soliddeltabothx(1,0.1,2)
    if(r1 and not r2 and player.vy > 0)
    then
        touchgroundandjump()
    end
end
function touchgroundandjump()
    player.vy = -jumpspeed
    powertimecount = powertime
end
function onground()
    return (not fget(mget(player.x, downedge()), 0)) and fget(mget(player.x, downedge() + 0.2), 0)
end
function solid(xsign, ysign, flag)
    return soliddelta(xsign,0,ysign,0,flag)
end
function fmget(x,y,flag)
    return fget(mget(x,y),flag)
end
function solidbothx(ysign, flag)
    return solid(1,ysign,flag) or solid(-1,ysign,flag)
end
function solidbothy(xsign, flag)
    return solid(xsign,1,flag) or solid(xsign,-1,flag)
end
function soliddelta(xsign, deltaX, ysign, deltaY, flag)
    return fmget(player.x + player.width / 2 * xsign + xsign * deltaX, player.y + player.height / 2 * ysign + ysign * deltaY, flag) , fmget(player.x + player.width / 2 * xsign - xsign * deltaX, player.y + player.height / 2 * ysign - ysign * deltaY, flag)
end
function soliddeltabothy(xsign, deltaX, flag)
    r1,r2 = soliddelta(xsign,deltaX,-1,0,flag)
    r3,r4 = soliddelta(xsign,deltaX,1,0,flag)
    return r1 or r3 , r2 or r4
end
function soliddeltabothx(ysign, deltaY, flag)
    r1,r2 = soliddelta(-1,0,ysign,deltaY,flag)
    r3,r4 = soliddelta(1,0,ysign,deltaY,flag)
    return r1 or r3 , r2 or r4
end
function downFeetPlatform(delta)
    return fget(mget(player.x + player.width / 2, player.y + player.height / 2 - delta ))
end
function sign(num)
    if(num > 0)
    then
        return 1
    elseif(num < 0)
    then
        return -1
    else
        return 0
    end
end

__gfx__
00000000000770000000770000007700007700000077000044944444676767670000000000000000000000000000000000000000000000000000000000000000
00000000006116000007617000076170071670000716700044444494767676760000000000000000000000000000000000000000000000000000000000000000
00000000006156000007617000076170075670000756700049444449000000000000000000000000000000000000000000000000000000000000000000000000
000000000076670000257700a825770000775e0000775e8a44944944000000000000000000000000000000000000000000000000000000000000000000000000
0000000006d77d6000e57d00a9e57d0000d7520000d7529a44444494000000000000000000000000000000000000000000000000000000000000000000000000
0000000006d66d6000e57d00a9e57d0000d7520000d7529a94444944000000000000000000000000000000000000000000000000000000000000000000000000
00000000006776000000660000006600006600000066000044944494000000000000000000000000000000000000000000000000000000000000000000000000
00000000006006000000660000006600006600000066000094444444000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000e5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000e5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0002020202020104000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0608080808080808080808080808080600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0607070000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000707000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000800000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000707000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000707000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0600000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060000060606000000000606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060000060606000000000606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060000060606000000000606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
